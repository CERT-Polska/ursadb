name: "Code testing"
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
jobs:
  test_clang_format:
    name: test clang format
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: install dependencies
      run: sudo apt-get install gcc g++ libzmq3-dev cmake build-essential git
    - name: configure
      run: mkdir build && cd build && cmake ..
    - name: clang-format
      run: cmake --build build --target format
    - name: check formatting
      run: git diff --exit-code || ( >&2 echo "Please run 'make format' to fix these issues automatically." && false )
  test_clang_tidy:
    name: test clang tidy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: checkout master
      run: git fetch origin master
    - name: install dependencies
      run: sudo apt-get install -y clang-tidy libzmq3-dev
    - name: find changed files
      run: git diff origin/master --name-only "*.cpp" > /tmp/filestocheck && cat /tmp/filestocheck
    - name: clang-tidy
      run: if [ -s /tmp/filestocheck ]; then clang-tidy $(cat /tmp/filestocheck) -checks="bugprone-*,google-*,performance-*,readability-*" -fix -- -std=c++17 -I extern/ -I extern/spdlog/include/ -I.; fi
    - name: FYI git diff
      run: git diff
      if: ${{ always() }}
  run_cmake_build:
    name: run cmake build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: install dependencies
      run: sudo apt-get install gcc g++ libzmq3-dev cmake build-essential
    - name: configure
      run: mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS="-Werror" ..
    - name: build
      run: cmake --build build
    - name: test
      run: ./build/ursadb_test
  build_docker_image:
    name: build docker image
    runs-on: ubuntu-latest
    steps:
    - name: Check out the repo
      uses: actions/checkout@v2
      with:
        submodules: true
    - name: Build image
      uses: docker/build-push-action@v1
      with:
        push: false
  e2etest:
    name: run e2e tests
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: install dependencies
      run: sudo apt-get install gcc g++ libzmq3-dev cmake build-essential git python3 python3-pip
    - name: install python dependencies
      run: pip3 install pyzmq pytest
    - name: configure
      run: mkdir build && cd build && cmake -DCMAKE_CXX_FLAGS="-Werror" ..
    - name: build
      run: cd build && make ursadb ursadb_new
    - name: test
      run: python3 -m pytest
